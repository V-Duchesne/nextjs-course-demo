{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\vdu\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Vincent:darkness6427@cluster0.exsgffw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        id: 'm1',\n        title: 'First Meetup',\n        address: 'Some Street',\n        description: 'The meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/vdu/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AAGrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wHADV;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,aAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAI,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,qGAApB,CAAtB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAG;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAGF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,wHADC;AAERC,QAAAA,EAAE,EAAE,IAFI;AAGRC,QAAAA,KAAK,EAAE,cAHC;AAIRC,QAAAA,OAAO,EAAE,aAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe5B,aAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n\r\n\r\n    return (\r\n        <MeetupDetail\r\n            image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n            title=\"First Meetup\"\r\n            address=\"Some Street\"\r\n            description=\"The meetup description\"\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client =  await MongoClient.connect('mongodb+srv://Vincent:darkness6427@cluster0.exsgffw.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, {_id : 1}).toArray();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {meetupId : meetup._id.toString()}}))\r\n\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n                id: 'm1',\r\n                title: 'First Meetup',\r\n                address: 'Some Street',\r\n                description: 'The meetup description'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}